import{r as i,j as v}from"./app-fS8xcU2s.js";import{u as y}from"./index-IrNRNo0h.js";function R(t,r,{checkForDefaultPrevented:e=!0}={}){return function(o){if(t==null||t(o),e===!1||!o.defaultPrevented)return r==null?void 0:r(o)}}function $(t,r=[]){let e=[];function s(c,u){const n=i.createContext(u),f=e.length;e=[...e,u];const a=d=>{var C;const{scope:S,children:l,...h}=d,x=((C=S==null?void 0:S[t])==null?void 0:C[f])||n,z=i.useMemo(()=>h,Object.values(h));return v.jsx(x.Provider,{value:z,children:l})};a.displayName=c+"Provider";function b(d,S){var x;const l=((x=S==null?void 0:S[t])==null?void 0:x[f])||n,h=i.useContext(l);if(h)return h;if(u!==void 0)return u;throw new Error(`\`${d}\` must be used within \`${c}\``)}return[a,b]}const o=()=>{const c=e.map(u=>i.createContext(u));return function(n){const f=(n==null?void 0:n[t])||c;return i.useMemo(()=>({[`__scope${t}`]:{...n,[t]:f}}),[n,f])}};return o.scopeName=t,[s,m(o,...r)]}function m(...t){const r=t[0];if(t.length===1)return r;const e=()=>{const s=t.map(o=>({useScope:o(),scopeName:o.scopeName}));return function(c){const u=s.reduce((n,{useScope:f,scopeName:a})=>{const d=f(c)[`__scope${a}`];return{...n,...d}},{});return i.useMemo(()=>({[`__scope${r.scopeName}`]:u}),[u])}};return e.scopeName=r.scopeName,e}function p(t){const r=i.useRef(t);return i.useEffect(()=>{r.current=t}),i.useMemo(()=>(...e)=>{var s;return(s=r.current)==null?void 0:s.call(r,...e)},[])}function g({prop:t,defaultProp:r,onChange:e=()=>{}}){const[s,o]=P({defaultProp:r,onChange:e}),c=t!==void 0,u=c?t:s,n=p(e),f=i.useCallback(a=>{if(c){const d=typeof a=="function"?a(t):a;d!==t&&n(d)}else o(a)},[c,t,o,n]);return[u,f]}function P({defaultProp:t,onChange:r}){const e=i.useState(t),[s]=e,o=i.useRef(s),c=p(r);return i.useEffect(()=>{o.current!==s&&(c(s),o.current=s)},[s,o,c]),e}function j(t){const[r,e]=i.useState(void 0);return y(()=>{if(t){e({width:t.offsetWidth,height:t.offsetHeight});const s=new ResizeObserver(o=>{if(!Array.isArray(o)||!o.length)return;const c=o[0];let u,n;if("borderBoxSize"in c){const f=c.borderBoxSize,a=Array.isArray(f)?f[0]:f;u=a.inlineSize,n=a.blockSize}else u=t.offsetWidth,n=t.offsetHeight;e({width:u,height:n})});return s.observe(t,{box:"border-box"}),()=>s.unobserve(t)}else e(void 0)},[t]),r}export{R as a,j as b,$ as c,p as d,g as u};
